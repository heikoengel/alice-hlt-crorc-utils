CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(crorc-utils)
SET(VERSION "1.0.0")
SET(CPACK_RPM_PACKAGE_RELEASE 9)

MESSAGE( STATUS "Install directory   = ${CMAKE_INSTALL_PREFIX}")

# Find librorc.so
FIND_LIBRARY( LIBRORC NAMES rorc )
FIND_PATH( LIBRORC_INCLUDE NAMES librorc.h )

IF(LIBRORC)
  MESSAGE(STATUS "Found librorc: ${LIBRORC}")
  IF(LIBRORC_INCLUDE)
    MESSAGE(STATUS "Found librorc include in ${LIBRORC_INCLUDE}")
  ELSE(LIBRORC_INCLUDE)
    MESSAGE(ERROR "Could not find librorc includes")
  ENDIF(LIBRORC_INCLUDE)
ELSE(LIBRORC)
  ADD_DEFINITIONS(-DNOLIBRORC)
  MESSAGE(STATUS "Could not find librorc library, building without C-RORC support")
ENDIF(LIBRORC)

INCLUDE_DIRECTORIES(${LIBRORC_INCLUDE})

# add actual code
ADD_SUBDIRECTORY(src)

# add helper scripts
ADD_SUBDIRECTORY(scripts)

# CPack
SET(CPACK_PACKAGE_VERSION ${VERSION})
SET(CPACK_GENERATOR "RPM")
SET(CPACK_PACKAGE_NAME "crorc-utils")
SET(CPACK_RPM_PACKAGE_LICENSE "BSD")
SET(CPACK_RPM_PACKAGE_GROUP "System Environment/Base")
set(CPACK_RPM_PACKAGE_REQUIRES "librorc >= 10.0.0")
SET(CPACK_PACKAGE_CONTACT "Heiko Engel <hengel@cern.ch>")
SET(CPACK_PACKAGE_VENDOR "CERN")
SET(CPACK_PACKAGING_INSTALL_PREFIX /usr)
SET(CPACK_PACKAGE_FILE_NAME
  "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}.${CMAKE_SYSTEM_PROCESSOR}")
INCLUDE(CPack)
